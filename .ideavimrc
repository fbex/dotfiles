" IdeaVim Config
"
" Set <control-h/j/k/l> for Left/Down/Up/Right in IntelliJ preferences
" to enable vim-like navigation in native IntelliJ windows.
"
" Good IntelliJ keyboard shortcuts without a IdeaVim binding:
"   - Alt+Enter: ShowIntentionActions
"   - Cmd+B: GotoDeclaration
"   - Cmd+Shift+Enter: EditorCompleteStatement
"   - Esc: LeaveActiveWindow
"   - Shift+Esc: HideActiveWindow
"
" Good Vim shortcuts:
"   - zo / zc: Open/Collapse region
"   - zO / zC: Open/Collapse region recursively
"   - zR / zM: Open/Collapse all regions
"
" More information:
"   - Blog post: https://towardsdatascience.com/the-essential-ideavim-remaps-291d4cd3971b
"   - More examples: https://jb.gg/share-ideavimrc


" ==============================
" ========== SETTINGS ==========
" ==============================

" Show a few lines of context around the cursor. Note that this makes the
" text scroll if you mouse-click near the start or end of the window.
set scrolloff=5

" enable system clipboard copy & pase
set clipboard+=unnamed
set clipboard+=ideaput

set foldmethod=syntax "better method folding
set ideajoin "smart join with Shift+J
set idearefactormode=keep "stay in normal mode when refactoring
set number relativenumber "relative line numbers
set showmode "show vim search in status bar
set showcmd
set ideastatusicon=gray

" search
set hlsearch "hightlight search results
set ignorecase
set incsearch "Do incremental searching (show partial results)


" =============================
" ========== PLUGINS ==========
" =============================

Plug 'vim-easymotion'
"TODO: learn usage

Plug 'preservim/nerdtree'
"TODO: learn properly + remaps here
"let g:NERDTreeMapActivateNode='l'
"let g:NERDTreeMapJumpParent='h'
sethandler <c-n> a:vim
map <c-n> :NERDTreeFocus<CR>

Plug 'terryma/vim-multiple-cursors'
"TODO: map keys! and learn + remaps here

Plug 'tpope/vim-commentary'
" Usage: gcc

Plug 'tpope/vim-surround'
"TODO: learn properly

Plug 'machakann/vim-highlightedyank'
" highlights yanked region

Plug 'dbakker/vim-paragraph-motion'
" The { and } motions also match blank lines, not just empty ones


" =================================================
" ========== VIM Convenience Keybindings ==========
" =================================================

" Don't use Ex mode, use Q for formatting.
map Q gq

" Allow multiple indents in a row
vmap < <gv
vmap > >gv

" Keep editor line centered when scrolling or searching
nnoremap <c-d> <c-d>zz
nnoremap <c-u> <c-u>zz
nmap n nzzzv
nmap N Nzzzv


" ========================================
" ========== Editor Keybindings ==========
" ========================================

" --- space as leader ---
let mapleader = " "


" ========== Top-Level - Control-Key ==========

" --- LunarVim ---
nnoremap <c-h> <c-w>h
nnoremap <c-l> <c-w>l
nnoremap <c-k> <c-w>k
nnoremap <c-j> <c-w>j
nnoremap <c-s> :w<CR>

" --- Addons ---
nmap <c-cr> :action EditorCompleteStatement<CR>
imap <c-cr> <action>(EditorCompleteStatement)
nmap <c-s-cr> :action Generate<CR>
imap <c-s-cr> :action Generate<CR>


" ========== Top-Level - Move-Lines ==========

" --- LunarVim ---
nmap <a-j> :action MoveLineDown<CR>
nmap <a-k> :action MoveLineUp<CR>
vmap <a-j> :action MoveLineDown<CR>
vmap <a-k> :action MoveLineUp<CR>

" --- Addons ---
nmap <a-s-j> :action MoveStatementDown<CR>
nmap <a-s-k> :action MoveStatementUp<CR>
vmap <a-s-j> :action MoveStatementDown<CR>
vmap <a-s-k> :action MoveStatementUp<CR>
vmap J :action MoveLineDown<CR>
vmap K :action MoveLineUp<CR>


" ========== Top-Level - Misc ==========

" --- LunarVim ---
nmap \ :action ActivateTerminalToolWindow<CR>
nmap K :action QuickJavaDoc<CR>

" --- Addons ---
nmap [[ :action MethodUp<CR>
nmap ]] :action MethodDown<CR>


" ========== Top-Level - [G]oto Code Actions ==========

" --- LunarVim ---
" gc + gcc are handled by tpope/vim-commentary
nmap gb :action CommentByBlockComment<CR>
vmap gb :action CommentByBlockComment<CR>
" TODO: what is the difference between gD and gd??
nmap gD :action GotoDeclaration<CR>
nmap gd :action GotoDeclaration<CR>
nmap gI :action GotoImplementation<CR>
nmap gr :action ShowUsages<CR>
nmap gl :action ShowErrorDescription<CR>

" --- Addons ---
nmap gt :action GotoTest<CR>
nmap gs :action GotoSuperMethod<CR>
nmap gi :action GotoImplementation<CR>


" ========== Leader - Top-Level ==========

" --- LunarVim ---
nmap <leader>/ :action CommentByLineComment<CR>
nmap <leader>c :action CloseEditor<CR>
nmap <leader>e :NERDTreeToggle<CR>
nmap <leader>f :action GotoFile<CR>
nmap <leader>h :noh<CR>
nmap <leader>q :q<CR>
nmap <leader>w :w<CR>

" --- Addons ---
nmap <leader>= :action ReformatCode<CR>
nmap <leader>ot :action Terminal.OpenInTerminal<CR>


" ========== Leader - [B]uffer ==========

" --- LunarVim ---
nmap <leader>bb :action Back<CR>
nmap <leader>bn :action Forward<CR>
nmap <leader>bf :action RecentFiles<CR>


" ========== Leader - [D]ebug ==========

" --- LunarVim ---
nmap <leader>dt :action ToggleLineBreakpoint<CR>
nmap <leader>ds :action ContextDebug<CR>
nmap <leader>dU :action ActivateDebugToolWindow<CR>


" ========== Leader - [G]it ==========

" --- LunarVim ---
nmap <leader>gb :action Git.Branches<CR>
nmap <leader>gd :action Compare.SameVersion<CR>
nmap <leader>gg :action Git.Menu<CR>
" similar to Git.Menu: Vcs.QuickListPopupAction
nmap <leader>gj :action VcsShowNextChangeMarker<CR>
nmap <leader>gk :action VcsShowPrevChangeMarker<CR>
" does not work
"nnap <leader>gl :action Annotate<CR>
nmap <leader>gp :action Vcs.ShowDiffChangedLines<CR>
nmap <leader>gR :action ChangesView.Revert<CR>
nmap <leader>gr :action Vcs.RollbackChangedLines<CR>


" ========== Leader - [I]ntelliJ Windows ==========

" -- Addons ---
nmap <leader>Iv :action ViewToolButtons<CR> :action ViewNavigationBar<CR>
nmap <leader>It :action ToolWindowsGroup<CR>
nmap <leader>Ih :action HideAllWindows<CR>
nmap <leader>Ir :action JumpToLastWindow<CR>
nmap <leader>Ib :action PreviousWindow<CR>
nmap <leader>In :action NextWindow<CR>
nmap <leader>Iw :action EditSourceInNewWindow<CR>


" ========== Leader - [L]SP ==========

" --- LunarVim ---
nmap <leader>la :action ShowIntentionActions<CR>
nmap <leader>lf :action ReformatCode<CR>
nmap <leader>lj :action GotoNextError<CR>
nmap <leader>lk :action GotoPreviousError<CR>
nmap <leader>lr :action RenameElement<CR>
nmap <leader>lS :action GotoSymbol<CR>
nmap <leader>ls :action FileStructurePopup<CR>
nmap <leader>le :action ActivateProblemsViewToolWindow<CR>
nmap <leader>ld :action ActivateProblemsViewToolWindow<CR>
nmap <leader>lq :action ActivateProblemsViewToolWindow<CR>
nmap <leader>lw :action ActivateProblemsViewToolWindow<CR>

" --- Addons ---
nmap <leader>lo :action OptimizeImports<CR>
nmap <leader>lR :action Refactorings.QuickListPopupAction<CR>
nmap <leader>lg :action Generate<CR>


" ========== Leader - [L]unarVim Actions (IdeaVim Actions) ==========

" --- LunarVim ---
nmap <leader>Lc :e ~/.ideavimrc<CR>
nmap <leader>Lr :action IdeaVim.ReloadVimRc.reload<CR>
nmap <leader>Lf :action VimFindActionIdAction<CR>


" ========== Leader - [S]earch ==========

" --- LunarVim ---
nmap <leader>sb :action Git.Branches<CR>
nmap <leader>sf :action GotoFile<CR>
nmap <leader>sr :action RecentFiles<CR>
nmap <leader>st :action FindInPath<CR>

" --- Addons ---
nmap <leader>sc :action GotoClass<CR>
nmap <leader>ss :action GotoSymbol<CR>
nmap <leader>sa :action GotoAction<CR>
nmap <leader>sC :action JumpToLastChange<CR>
nmap <leader>sl :action RecentLocations<CR>
nmap <leader>sh :action LocalHistory.ShowHistory<CR>


" ========== Leader - [T]est ==========

" --- Addons ---
" Reflects vim-test mappings
nmap <leader>tt :action ContextRun<CR>
nmap <leader>ta :action RunClass<CR>
nmap <leader>tr :action Rerun<CR>
" Other test mappings
nmap <leader>tf :action RerunFailedTests<CR>
nmap <leader>tR :action Run<CR>
nmap <leader>tc :action ChooseRunConfiguration<CR>
nmap <leader>tg :action GotoTest<CR>
nmap <leader>tw :action ActivateRunToolWindow<CR>


" ========== Leader - [W]indow Navigation ==========

" --- Addons ---
nmap <leader>wm :action MaximizeEditorInSplit<CR>
nmap <leader>wv :action SplitVertically<CR>
nmap <leader>ws :action SplitHorizontally<CR>
nmap <leader>wc :action CloseContent<CR>
nmap <leader>wo :action Unsplit<CR>
"CTRL+w s       -   Split current window horizontally
"CTRL+w v       -   Split current window vertically
"CTRL+w c       -   Close current window
"CTRL+w m       -   Move to window according to motion m
"CTRL+w o       -   Maxmize current window (note: this overwrites your current window configuration)


" ----------  Potential keybindings ----------

" --- Unmapped LunarVim keybindings ---
"
" <c-Arrow> = Resize Split
" <c-q> = Quickfix Toggle
" <a-1> = Horizontal Terminal
" <a-2> = Vertical Terminal
" <a-3> = Floating Terminal
" <a-n> = Move to next reference
" <a-p> = Move to previous reference
"
" % = Nvim Builtin
" & = Nvim Builtin
" Y = Nvim Builtin
"
" [q = ?
" ]q = ?
"
" g% = ?
" gs = Show signature help
" gx = ??
"
" z= = +spelling
"
" <leader>; = Dashboard
"
" All Leader - [B]uffer
" All Leader - [D]ebug
"
" <leader>gC = Checkout Commit (for current file)
" <leader>gc = Checkout Commit
" <leader>gg = Lazygit
" <leader>go = Open changed file
" <leader>gs = Stage hunk
" <leader>gu = Undo Stage hunk
"
" <leader>lI = Mason Info
" <leader>li = Info
" <leader>ll = CodeLens Action
"
" <leader>sc = Colorscheme
" <leader>sC = Commands
" <leader>sh = Find Help
" <leader>sH = Find highlight groups
" <leader>sk = Keymaps
" <leader>sM = Manpages
" <leader>sp = Colorscheme with Preview
" <leader>sR = Registers
